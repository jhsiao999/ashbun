% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/methodsNormalize.R
\name{normalize.scran}
\alias{normalize.scran}
\title{scran}
\usage{
normalize.scran(counts, control = list(save_modelFit = FALSE,
  get_cell_clusters = FALSE, min.size = 50))
}
\arguments{
\item{counts}{Gene by sample expression count matrix (G by N).}

\item{control}{List with control arguments, including
\code{save_modelFit} TRUE to output the complete SCnorm output.
\code{get_cell_clusters} TRUE/FALSE to use scran to cluster cells and then estimate
                         size factors by cell clusters.
\code{min.size} scran internal argument. Integer scalar specifying the minimum size
                of each cluster. Default to be 50.}
}
\value{
\code{libsize_factors} numeric vector of the scale factors for library size.
}
\description{
The most recent version of scran depends on R > 3.4.
             I use scran 1.2.2, which depeneds on R.3.3.0. One difference that I have found
             so far is about SCESet - in the older version, the spike-in variable is a binary
             vector of yes/no, and in the newer version, the spike-in variable is a numeric
             vector specifying which genes is spike-in controls.
}
\examples{
ipsc_eset <- get(load(system.file("testdata", "HumanTungiPSC.rda", package = "ashbun")))
counts <- exprs(ipsc_eset)[sample(nrow(exprs(ipsc_eset)), ), ]

#---- generat simulated datasets
simdata_list <- simulationWrapper(counts, Nsim = 5, Nsample = 100, Ngene = 500)

#---- extract a single dataset as an example
#---- take pi0 = .9, the first simulated data
simdata <- simdata_list[[3]][[1]]

#---- normalize
output <- normalize.scran(simdata$counts)

}
